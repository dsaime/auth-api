networks:
  dsaime.network:

services:
  test.auth-api:
    container_name: dsaime.test.auth-api
    build:
      context: ../
      dockerfile: ./Containerfile
    networks:
      dsaime.network:
    ports:
      - "8080:8080"
    depends_on:
      test.pgsql:
        condition: service_healthy
      test.echo-server:
        condition: service_started
    command:
      - "--http-addr"
      - ":8080"
      - "--jwt-secret"
      - "example_jwt_secret"
      - "--pgsql-dsn"
      - "postgresql://postgres:postgres@test.pgsql:5432/test_auth_api_db?sslmode=disable"
      - "--log-level"
      - "debug"
      - "--ip-alert-webhook"
      - "http://test.echo-server/webhook?session_id={{.SessionID}}&old_id={{.OldIP}}&new_ip={{.NewIP}}"

  # https://github.com/docker-library/docs/blob/master/postgres/README.md
  test.pgsql:
    container_name: dsaime.test.pgsql
    image: postgres:17
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: test_auth_api_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./pgsql/init:/docker-entrypoint-initdb.d
    networks:
      dsaime.network:

  # https://hub.docker.com/r/ealen/echo-server
  test.echo-server:
    container_name: dsaime.test.echo-server
    image: ealen/echo-server:0.9.2
    restart: unless-stopped
    ports:
      - "5828:80" # http://127.0.0.1:5828/
    networks:
      dsaime.network:
